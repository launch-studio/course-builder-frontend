import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { allContentTypes, niches } from '../../data/contentTypes';
import { ContentType } from '../../types';

const Dashboard: React.FC = () => {
    const navigate = useNavigate();
    const [selectedNiche, setSelectedNiche] = useState<string>('');
    const [selectedCategory, setSelectedCategory] = useState<string>('');

    const categories = [
        { id: 'lead-magnet', name: '–õ–∏–¥-–º–∞–≥–Ω–∏—Ç—ã', icon: 'üéØ', color: 'from-red-500 to-pink-500' },
        { id: 'landing', name: '–õ–µ–Ω–¥–∏–Ω–≥–∏', icon: 'üìÑ', color: 'from-blue-500 to-cyan-500' },
        { id: 'email', name: 'Email-—Ä–∞—Å—Å—ã–ª–∫–∏', icon: 'üìß', color: 'from-green-500 to-emerald-500' },
        { id: 'presentation', name: '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏', icon: 'üìä', color: 'from-purple-500 to-violet-500' },
        { id: 'interactive', name: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤', icon: 'üéÆ', color: 'from-orange-500 to-red-500' },
        { id: 'social', name: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', icon: 'üì±', color: 'from-indigo-500 to-purple-500' },
        { id: 'legal', name: '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã', icon: '‚öñÔ∏è', color: 'from-gray-500 to-slate-500' }
    ];

    const filteredContentTypes = allContentTypes.filter(type => {
        if (selectedCategory && type.category !== selectedCategory) return false;
        if (selectedNiche && !type.niches.includes(selectedNiche)) return false;
        return true;
    });

    const handleContentTypeSelect = (contentType: ContentType) => {
        navigate('/constructor', {
            state: {
                contentType,
                selectedNiche,
                selectedCategory
            }
        });
    };

    return (
        <div className="min-h-screen">
            {/* –§–æ–Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
            <div className="fixed inset-0 overflow-hidden pointer-events-none">
                <div className="absolute -top-40 -right-40 w-80 h-80 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob"></div>
                <div className="absolute -bottom-40 -left-40 w-80 h-80 bg-yellow-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-2000"></div>
                <div className="absolute top-40 left-40 w-80 h-80 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-4000"></div>
            </div>

            <div className="relative z-10 px-4 py-6">
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                <div className="mb-6 fade-in">
                    <h1 className="text-2xl font-bold text-white mb-2">
                        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
                    </h1>
                    <p className="text-white/60 text-sm">
                        –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç –±—ã—Å—Ç—Ä–æ
                    </p>
                </div>

                {/* –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                <div className="mb-6 slide-up">
                    <div className="grid grid-cols-3 gap-3">
                        <div className="glass-card p-3 text-center">
                            <div className="text-lg font-bold text-white">{allContentTypes.length}</div>
                            <div className="text-xs text-white/60">–¢–∏–ø–æ–≤</div>
                        </div>
                        <div className="glass-card p-3 text-center">
                            <div className="text-lg font-bold text-white">{niches.length}</div>
                            <div className="text-xs text-white/60">–ù–∏—à</div>
                        </div>
                        <div className="glass-card p-3 text-center">
                            <div className="text-lg font-bold text-white">50+</div>
                            <div className="text-xs text-white/60">–®–∞–±–ª–æ–Ω–æ–≤</div>
                        </div>
                    </div>
                </div>

                {/* –§–∏–ª—å—Ç—Ä—ã */}
                <div className="mb-6 slide-up">
                    <div className="glass-card p-4">
                        <div className="flex gap-3">
                            <select
                                value={selectedNiche}
                                onChange={(e) => setSelectedNiche(e.target.value)}
                                className="select-styled flex-1 text-sm"
                            >
                                <option value="">–í—Å–µ –Ω–∏—à–∏</option>
                                {niches.map((niche) => (
                                    <option key={niche.id} value={niche.id}>
                                        {niche.name}
                                    </option>
                                ))}
                            </select>
                            <select
                                value={selectedCategory}
                                onChange={(e) => setSelectedCategory(e.target.value)}
                                className="select-styled flex-1 text-sm"
                            >
                                <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                                {categories.map((category) => (
                                    <option key={category.id} value={category.id}>
                                        {category.icon} {category.name}
                                    </option>
                                ))}
                            </select>
                        </div>
                    </div>
                </div>

                {/* –°–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
                <div className="space-y-3">
                    {filteredContentTypes.slice(0, 8).map((contentType, index) => {
                        const category = categories.find(c => c.id === contentType.category);
                        return (
                            <div
                                key={contentType.id}
                                onClick={() => handleContentTypeSelect(contentType)}
                                className="glass-card p-4 cursor-pointer hover-lift card-hover bounce-in"
                                style={{ animationDelay: `${index * 50}ms` }}
                            >
                                <div className="flex items-center justify-between">
                                    <div className="flex items-center">
                                        <div className={`w-10 h-10 rounded-lg bg-gradient-to-r ${category?.color} flex items-center justify-center text-lg mr-3`}>
                                            {category?.icon}
                                        </div>
                                        <div>
                                            <h3 className="text-white font-semibold text-sm">
                                                {contentType.name}
                                            </h3>
                                            <p className="text-white/60 text-xs">
                                                {contentType.blocks.length} –±–ª–æ–∫–æ–≤
                                            </p>
                                        </div>
                                    </div>
                                    <button className="button-secondary text-xs px-3 py-1">
                                        –°–æ–∑–¥–∞—Ç—å
                                    </button>
                                </div>
                            </div>
                        );
                    })}
                </div>

                {/* –ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ */}
                {filteredContentTypes.length > 8 && (
                    <div className="mt-6 text-center">
                        <button className="button-secondary text-sm">
                            –ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ {filteredContentTypes.length - 8}
                        </button>
                    </div>
                )}

                {/* –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */}
                {filteredContentTypes.length === 0 && (
                    <div className="text-center py-12 fade-in">
                        <div className="text-6xl mb-4">üîç</div>
                        <h3 className="text-lg font-semibold text-white mb-2">
                            –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
                        </h3>
                        <p className="text-white/60 text-sm mb-4">
                            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                        </p>
                        <button
                            onClick={() => {
                                setSelectedNiche('');
                                setSelectedCategory('');
                            }}
                            className="button-primary text-sm"
                        >
                            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                        </button>
                    </div>
                )}
            </div>
        </div>
    );
};

export default Dashboard;
